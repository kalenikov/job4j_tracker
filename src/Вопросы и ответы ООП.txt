отношение has-a ИМЕЕТ


# Композиция #
объект A управляет временем жизни объекта B
если дочерний объект не может сущетсвовать без родителя
дочерний объект содержит родителя в поле
если один объект создает другой объект и время жизни "части" зависит от времени жизни целого

+ нет побочных эффектов при изменении родителя (н-р, у наследников не появляются новые методы)
+ использует из родителя только то, что нужно
- копирование кода
- клиент должен знать о типе другого и уметь его создавать

# Агрегация #
объект А получает ссылку на объект B
если один объект получает ссылку (указатель) на другой объект в процессе конструирования

Пример: отвертка. Если отвертка цельная, т.е. ручка и насадка намертво связаны друг с другом, то мы имеем отношение композиции. Если же насадка съемная и может существовать без ручки или же использоваться с другой ручкой, то мы имеем отношение агрегации.
+ большая гибкость
+ менее слабая связанность между классами


# Наследование #
+ нет дублирования кода
- жесткая связь с родителем (если нужно поменять родителя, это затренет всех наследников)


=========================================================================================
1. Что такое ООП?
    методология программирования, которая представляет программу в виде совокупности объектов (каждый из которых явлю. экземпляром класса, а классы образуют иерархию наследования)


2. Базовые концепции ООП?
    наследование (механизм, новый класс на основе родительского) 
    инкапсуляция (скрытие внутренней реализации | ограничение доступа к данным и изменению)
    полиморфизм (способность программы работать с опр.интерфейсом без знания типа)
    абстракция (выделение главного, отбрасывание второстепенного)


3. Укажите из каких элементов состоит класс
    шаблон, на основе которого можно создавать экземпляры
    1. ПОЛЯ (характеристики, данные которые хранит класс) - локальные переменные, переменные экз, стат.перем
    2. методы (действия, которые может совершать)
    специальный метод (конструктор)

4. Что такое конструктор?
    метод, который вызывается при созданнии нового экземпляра объекта
    нужен для автоматеской инициализации перемененных
    ЯВНЫЙ\НЕЯВНЫЙ

5. Можно ли наследовать конструктор?
    нет, но можно его вызывать с помощью слова super

6. Что такое перегрузка конструктора?
    создание конструктора с другим набором аргументов

7. Что такое статический метод?
    метод, который можно вызвать без создания объекта класса
    ст.методу доступны только стат.переменные
    ст.метод нельзя переопределять

8. Что такое не статический метод?
    метод для вызова которого нужно создать экземпляр класса


9. Для чего используется ключевое слово this?
    ссылка на текущий экземпляр класса, который вызывал метода
    это неявный параметр любого нестат метода

    когда нужно использовать:
        1.если у переменной метода и у экземпляра класса одинаковые имена
        2.явный вызов конструктора


10. Какой класс является базовый родительным классов для всех классов?
    Object корневой класс в иерархии классов Java.
    Все непримитивный типы, включая массивы, наследуют прямо или косвенно от него.

11. Что такое наследование? Приведите примеры из реальной жизни.
    механизм, позволяющий создавать новый класс на основе родительского
    Автомобили -> Легковые -> Модель1, Модель2.
    Млекопитающие -> Киты -> Голубой кит, горбатый кит.

12. Опишите процесс создания нового объекта
    для создания используется оператор new, который вызывает конструктор класса
    есть еще блок статистической инициализации

    Book b;     // объявление переменной определенного типа/класса
    b = new Book(); // создание (выделение памяти под объект) и инициализация объекта;

13. Как вызвать метод из родительского класса?
    через слово super, которое ссылается на экземпляр родительского класс


14. Что такое переопределение метода?
    возможность класса-наследника переопределить (задать новую реализацию) метода, определенного в родительском классе
    сигнатура (имя + параметры + порядок) должна совпадать с родителем


15. Можно ли переопределить статический метод?
    нет
    возможно только сокрытие


16. Что такое виртуальная функция и используются ли они в Java?
    это функция в базовом классе, которую можно переопределить в произодном классе
    все методы по умолчанию явл виртуальными

17. Что такое перегрузка метода?
    прием, когда существуют методы с одним названием, но разным набором параметров
    Перегрузить можно не только метод, но и конструктор.
    При вызове перегруженного метода компилятор автоматически определяет нужный вариант метода по его параметрам, которые указываются при вызове.

18. Можно ли изменить тип возвращаемых данных при перегрузке метода?
    если отличается набор параметров

19. Что такое множественное наследование? Как его можно реализовать в Java.
    Java не поддерживает множественное наследование классов из-за ромбивидной проблемы
    Можно реализовать через интерфейсы или через композицию

20. Что такое полиморфизм? Приведите примеры из реальной жизни.
    способность программы использовать объекты с определенным интерфейсом без информации о конкретном типе объекта
    это возможность работать с несколькими типами, как будьто это один и тот же тип
    розетка - любое устройство со штекером
    часы - рукав


21. Что такое инкапсуляция?
    (скрытие внутренней реализации | ограничение доступа к данным и изменению)

22. Как реализована инкапсуляция в Java? 
    через модификаторы доступа
    геттеры и сеттеры
    ?????


23. Можно ли применить модификаторы доступ к конструкторам?
    Если сделать private конструктор, то будет невозможно создать экземпляр в коде извне класса.
    И невозможно наследовать данный класс

24. Что такое интерфейс?
    программная конструкция, которая определяет поведение объекта, но не описывает детали реализации
    методы (public)
    свойства (public + static + final)
    зачем нужно: динамическое разрешение методов во время выполнения


25. Какие типы исключительных ситуаций бывают?
    Error - после них продолжение работы невозможно
    unchecked - на стадии комплиляции их отслеить нельзя
    н-р ошибка переполнения памяти или стека

    Exceptions - можно ехать дальше
    checked - решаемые и предсказуемые

26. Назовите основные методы класса Object?
    equals
    toString
    clone
    hashCode
    многопоточные: wait, notify, notifyAll

27. Что такое шаблоны проектирования?
    подходы к решению часто встречающихся задач
    порождающие (для создания об)
    структурные (отнощение м\у сущностями)
    поведенческие (упростить взаимодействие м\у)

28. Объясните шаблон - декоратор.
    Обертка
    Смысл Декоратора - динамическое добавление нового поведения в уже существующее поведение.

29. Объясните шаблон - стратегия (поведенческие)
    интерфейс UserAction с методом execute
    если в программе есть схожие части с похожим принципом действия, их можно вынести в отдельные сущности (классы или стратегии) и динамически вызывать во время выполнения 




примитивы в Java передаются в методы по значению.